package org.login;

import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.concurrent.TimeUnit;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.RichTextString;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.Wait;
import org.openqa.selenium.support.ui.WebDriverWait;

import io.github.bonigarcia.wdm.WebDriverManager;

public class BaseClass {
	WebDriver driver;
	
	
	public void browserlaunch(String url) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get(url);
	}

	public WebElement locators(String locatorType, String value) {
		if (locatorType.equals("id")) {
			WebElement findElement = driver.findElement(By.id(value));
			return findElement;
		} else if (locatorType.equals("name")) {
			WebElement findElement = driver.findElement(By.name(value));
			return findElement;
		} else {
			WebElement findElement = driver.findElement(By.xpath(value));
			return findElement;
		}
	}

	public void enterText(WebElement element, String text) {
		element.sendKeys(text);
	}

	public void buttonClick(WebElement element) {
		element.click();
	}
//
//	public String gettingTitle() {
//		String title = driver.getTitle();
//		return title;
//	}
//
//	public String gettingCurrentUrl() {
//		String currentUrl = driver.getCurrentUrl();
//		return currentUrl;
//	}
//
//	public String gettingText(WebElement element) {
//		String text = element.getText();
//		return text;
//	}
//
//	public String gettingAttribute(WebElement element, String attributeName) {
//		String attribute = element.getAttribute(attributeName);
//		return attribute;
//	}
//
//	public void actionsClick(WebElement element) {
//
//		action.click(element).perform();
//	}
//
//	public void actionsDouble(WebElement element) {
//		action.doubleClick(element).perform();
//	}
//
//	public void actionsRightClick(WebElement element) {
//		action.contextClick(element).perform();
//	}
//
//	public void actionsMouseHovering(WebElement element) {
//		action.moveToElement(element).perform();
//	}
//
//	public void actionsDragandDrop(WebElement element, WebElement element1) {
//		action.dragAndDrop(element, element1).perform();
//	}
//
//	public void actionsClickHold(WebElement element, WebElement element1) {
//		action.clickAndHold(element).moveToElement(element1).release().perform();
//	}
//
//	public void alerts(int num) {
//		
//		Alert a = driver.switchTo().alert();
//		if(num==0) {
//			a.accept();
//		}
//		else {
//			a.dismiss();
//		}
//	}
//	public void navigate(String url) {
//		driver.navigate().to(url);
//	}
//
//	public void navigateBack(String url) {
//		driver.navigate().to(url);
//		driver.navigate().back();
//	}
//
//	public void navigateForward(String url) {
//		driver.navigate().to(url);
//		driver.navigate().back();
//		driver.navigate().forward();
//	}
//
//	public void navigateRefresh() {
//		driver.navigate().refresh();
//	}
//
//	public void javaScriptScrollDownUp(String value) {
//		JavascriptExecutor ji = (JavascriptExecutor) driver;
//
//		ji.executeScript(value);
//		ji.executeScript(value);
//	}
//
//	public void javaScriptUsingWebElement(String value, WebElement element) {
//		JavascriptExecutor ji = (JavascriptExecutor) driver;
//		ji.executeScript(value, element);
//	}
//
//	public void thread(int num) throws InterruptedException {
//		Thread.sleep(num);
//	}
//	
//	public void select(WebElement element, int index) {
//		Select s = new Select(element);
//		s.selectByIndex(index);
//		
//	}
//	public void selectByValue(WebElement element,String value) {
//		
//		Select s = new Select(element);
//		s.selectByValue(value);
//	}
//	public void selectByVisibleText(WebElement element, String value) {
//		Select s = new Select(element);
//		s.selectByVisibleText(value);
//	}
//	public void deselectByIndex(WebElement element, int num) {
//		Select s = new Select(element);
//		s.deselectByIndex(num);
//	}
//	public void deselectByValue(WebElement element, String value ) {
//	Select s = new Select(element);
//	s.deselectByValue(value);
//	}
//	public void deselectByvisibleText(WebElement element, String value)	{
//		Select s = new Select(element);
//		s.deselectByVisibleText(value);
//	}
//	public void deselectAll(WebElement element) {
//		Select d = new Select(element);
//		d.deselectAll();	
//	}
//	public boolean frame(String value) {
//		String pageSource = driver.getPageSource();
//		boolean contains = pageSource.contains(value);
//		return contains;
//	}
//	public void switchToFrame(WebElement element) {
//		driver.switchTo().frame(element);
//	}
//	public String windowsHandlingParent() {
//		String windowHandle = driver.getWindowHandle();
//		return windowHandle;
//	}
//	public Set<String> windowHandlingChild() {
//		Set<String> windowHandles = driver.getWindowHandles();
//		return windowHandles;
//	}
//	public void quit() {
//		driver.quit();
//	}
//	public WebElement selectingFirstOption(WebElement element) {
//		Select w = new Select(element);
//		WebElement firstSelectedOption = w.getFirstSelectedOption();
//		return firstSelectedOption;
//	}
//	public List<WebElement> selectingAllOptions(WebElement element) {
//		Select t = new Select(element);
//		List<WebElement> allSelectedOptions = t.getAllSelectedOptions();
//		return allSelectedOptions;
//	}
//	public List<WebElement> gettingObject(WebElement element) {
//		Select w = new Select(element);
//		List<WebElement> options = w.getOptions();
//		return options;
//	}
//	public int hashCode() {
//		int hashCode = driver.hashCode();
//		return hashCode;
//	}
//	public boolean multipleSelect(WebElement element) {
//		Select s = new Select(element);
//		boolean multiple = s.isMultiple();
//		return multiple;
//	}
	public String excelRead(String path, String sheetName, int index, int cellindex) throws IOException {
		
		File f = new File(path);
		FileInputStream fs = new FileInputStream(f);
		Workbook w = new XSSFWorkbook(fs);
		Sheet sheet = w.getSheet(sheetName);
		Row row = sheet.getRow(index);
		Cell cell = row.getCell(cellindex);
		int cellType = cell.getCellType();
		if(cellType==1) {
			String stringCellValue = cell.getStringCellValue();
			return stringCellValue;
		}
		else if(DateUtil.isCellDateFormatted(cell)) {
			Date dateCellValue = cell.getDateCellValue();
			SimpleDateFormat s = new SimpleDateFormat("dd/MM/yyyy");
			String format = s.format(dateCellValue);
			return format;
	}
		else {
			double numericCellValue = cell.getNumericCellValue();
			long l = (long)numericCellValue;
			//to convert  long into string
			String l1 = String.valueOf(l);
			return l1;
		
		}
	}
public static void main(String[] args) throws IOException {
		
		BaseClass bc = new BaseClass();
		bc.browserlaunch("https://www.facebook.com/");
		
		String excelRead = bc.excelRead("D:\\Book1.xlsx", "Sheet1", 0, 0);
		WebElement locators = bc.locators("id", "email");
		bc.enterText(locators, excelRead);
		
		String excelRead2 = bc.excelRead("D:\\Book1.xlsx", "Sheet1", 0, 1);
		WebElement locators2 = bc.locators("id", "pass");
		bc.enterText(locators2, excelRead2);
		
		
	
	}
//	public static void main(String[] args) throws IOException {
//		
//		BaseClass bc = new BaseClass();
//		bc.browserlaunch("https://www.facebook.com/");
//		
//		String excelRead = bc.excelRead("D:\\Book1.xlsx", "Sheet1", 0, 0);
//		WebElement locators = bc.locators("id", "email");
//		bc.enterText(locators, excelRead);
//		
//		String excelRead2 = bc.excelRead("D:\\Book1.xlsx", "Sheet1", 0, 1);
//		WebElement locators2 = bc.locators("id", "pass");
//		bc.enterText(locators2, excelRead2);
//		
//	}	
}